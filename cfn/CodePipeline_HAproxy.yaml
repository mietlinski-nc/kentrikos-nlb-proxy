AWSTemplateFormatVersion: "2010-09-09"
Description: Seed template for AWS deployment pipeline for NLB proxy
Parameters:
  PipelineName:
    Type: String
    Description: CodePipeline name used as core Name
    Default: 'codepipeline-haproxy'
  TerraformVersion:
    Type: String
    Default: 0.11.11
    Description: The Terraform version to use
  TerraformSha256:
    Type: String
    Default: 94504f4a67bad612b5c8e3a4b7ce6ca2772b3c1559630dfd71e9c519e3d6149c
    Description: HASHICORP - Y U NO PACKAGE REPOSITORY
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Source Code Repository
        Parameters:
          - TFSourceS3Bucket
      - Label:
          default: Terraform
        Parameters:
          - TerraformVersion
          - TerraformSha256
Resources:
  SourceS3ObjectKey:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${TFSourceS3Bucket}-objectkey'
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${TFSourceS3Bucket}-artifacts'
      VersioningConfiguration:
        Status: Enabled
      AccessControl: BucketOwnerFullControl
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Location:
          Ref:
            ArtifactStoreBucket
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: S3
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                S3Bucket:
                  Ref: TFSourceS3Bucket
                S3ObjectKey:
                  Ref: SourceS3ObjectKey
              RunOrder: 1
        - Name: InvokeTerraform
          Actions:
          - Name: InvokeTerraformAction
            ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
            OutputArtifacts:
              - Name: InvokeTerraformOutput
            InputArtifacts:
              - Name: SourceOutput
            Configuration:
                ProjectName: !Ref InvokeTerraformBuild
            RunOrder: 1
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  InvokeTerraformBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.7.1
        Type: LINUX_CONTAINER
      Name: !Sub ${AWS::StackName}-InvokeTerraformBuild
      ServiceRole: !Ref InvokeTerraformBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.1
          phases:
            install:
              commands:
                - apt-get -y install jq
                - pip install --upgrade pip
                - pip install awscli --upgrade
                - aws --version
                - aws sts get-caller-identity
                - cd /tmp && curl -o terraform.zip https://releases.hashicorp.com/terraform/0.11.11/terraform_0.11.11_linux_amd64.zip && echo "94504f4a67bad612b5c8e3a4b7ce6ca2772b3c1559630dfd71e9c519e3d6149c terraform.zip" | sha256sum -c --quiet && unzip terraform.zip && mv terraform /usr/bin
            build:
              commands:
                - terraform remote config -backend=s3 -backend-config="bucket=${TerraformStateBucket}" -backend-config="key=terraform.tfstate"
                - terraform plan -out plan
                - sleep 5
                - terraform apply plan
                - sleep 10

  InvokeTerraformBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
