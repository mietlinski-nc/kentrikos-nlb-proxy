# Forked from: https://github.com/kentrikos/terraform-aws-shared-proxy-vpc-endpoint-service/
AWSTemplateFormatVersion: '2010-09-09'
Description: "Create CodeBuild project with required IAM/SG/SSM/CW Logs configuration and S3/DynamoDB for Terraform"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    -
      Label:
        default: "Top-level environment configuration"
      Parameters:
      - NameString
    -
      Label:
        default: "VPC configuration for CodeBuild"
      Parameters:
      - VpcID
      - PrivateSubnetIDs
    -
      Label:
        default: "IAM configuration"
      Parameters:
      - IAMCodeBuildPoliciesARNs
    -
      Label:
        default: "Git repository configuration (e.g. Bitbucket)"
      Parameters:
      - ConfigRepoURL


Parameters:
    NameString:
        Description: String that will be used as basis for naming S3 bucket, CB project, etc.
        Type: String
        Default: nlb-proxy
    VpcID:
      Type: AWS::EC2::VPC::Id
      Description: VPC in which CB project will run
    PrivateSubnetIDs:
      Type: List<AWS::EC2::Subnet::Id>
      Description: List of subnets in which CB will run (only private are supported)
   IAMCodeBuildPoliciesARNs:
      Description: List of IAM policy ARNs to be attached to CodeBuild role (comma separated string, no spaces)
      Default: 'arn:aws:iam::aws:policy/AdministratorAccess'
      Type: String
    ConfigRepoURL:
      Description: Full ssh URL to configuration repository (starting with ssh://)
      Type: String
      Default: 'https://github.com/mietlinski-nc/kentrikos-nlb-proxy'

Resources:
####################################
# PARAMETERS IN SSM PARAMETER STORE:
####################################
  ConfigRepoURLParameterStore:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/${NameString}/gitrepo/config_repo_url"
      Type: "String"
      Value: !Ref ConfigRepoURL



####################################
# IAM:
####################################
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        !Split [",", !Ref IAMCodeBuildPoliciesARNs]


####################################
# VPC resources:
####################################
  CodeBuildSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcID
      GroupDescription: CodeBuild SecurityGroup


####################################
# CloudWatch Logs 
####################################
  CodeBuildLogGroup:
    Type: AWS::Logs::LogGroup


####################################
# CodeBuild:
####################################
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref NameString
      Description: Run Terraform that deploys NLB/VPC Endpoint Services solution
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: no_artifacts
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:1.0
        EnvironmentVariables:
        - Name: GIT_CONFIGURATION_REPO_URL 
          Value: !Ref ConfigRepoURLParameterStore
          Type: PARAMETER_STORE
        - Name: GIT_SSH_KEY
          Value: !Ref GitSSHPrivateKeyParameterStore
          Type: PARAMETER_STORE
        - Name: TERRAFORM_ACTION
          Value: "create"
          Type: PLAINTEXT
        - Name: TERRAFORM_DELAY_SECONDS
          Value: "10"
          Type: PLAINTEXT
      TimeoutInMinutes: 30
      VpcConfig:
        VpcId: !Ref VpcID
        SecurityGroupIds:
          - !Ref CodeBuildSecurityGroup
        Subnets:
          !Ref PrivateSubnetIDs
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Ref CodeBuildLogGroup
      Source:
        Type: NO_SOURCE
        BuildSpec: !Sub |
          version: 0.2
          env:
            variables:
              TF_STATE_BUCKET: ${TerraformStateBucket}
              TF_LOCK_TABLE: ${TerraformLockTable}
              TF_STATE_BUCKET_KEY: "tf/${NameString}"
          phases:
            install:
              commands:
                - echo "Installing Terraform"
                - wget https://releases.hashicorp.com/terraform/0.11.13/terraform_0.11.13_linux_amd64.zip
                - unzip terraform_0.11.13_linux_amd64.zip
                - mv terraform /bin
            build:
              commands:
                - env #DEBUG
                - echo "Cloning configuration repository"
                - git clone $GIT_CONFIGURATION_REPO_URL terraform
                - cd terraform
                - terraform init -input=false -backend-config=region=$AWS_REGION -backend-config=bucket=$TF_STATE_BUCKET -backend-config=dynamodb_table=$TF_LOCK_TABLE -backend-config=key=$TF_STATE_BUCKET_KEY
                - echo "$TERRAFORM_ACTION" > /tmp/terraform_action # workaround for bash brackets in yaml
                - if grep -q -e "create" -e "plan" /tmp/terraform_action; then terraform plan -out=tfplan -input=false; fi
                - if grep -q "destroy" /tmp/terraform_action; then terraform plan -destroy -out=tfplan -input=false; fi
                - if grep -q "show" /tmp/terraform_action; then terraform show; fi
                - if grep -q -e "create" -e "destroy" /tmp/terraform_action; then sleep $TERRAFORM_DELAY_SECONDS; fi
                - if grep -q -e "create" -e "destroy" /tmp/terraform_action; then terraform apply -input=false tfplan; fi
                - if ! grep -q -e "create" -e "destroy" -e "plan" -e "show" /tmp/terraform_action; then echo "Unsupported TERRAFORM_ACTION, use either create, destroy, plan or show."; fi
####################################
# Terraform state:
####################################
  TerraformStateBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: Private
      BucketName: !Sub "tf-${AWS::AccountId}-${AWS::Region}-${NameString}"
      VersioningConfiguration:
        Status: Enabled

  TerraformLockTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
      - AttributeName: LockID
        AttributeType: S
      KeySchema:
      - AttributeName: LockID
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: !Sub "tf-state-lock-${NameString}"


Outputs:
  CodeBuildURL:
    Description: URL to CodeBuild project that will run Terraform
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/codesuite/codebuild/projects/${CodeBuildProject}"